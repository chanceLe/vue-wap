@import './rem';
@import './vars';

@mixin text($width, $height, $line: 2) {
    display: -webkit-box;
    width: rem($width);
    height: rem($height);
    overflow: hidden;
    line-height: rem($height / 2);
    text-overflow: ellipsis;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
}

@mixin nativeborder($color: $divide-color, $position: left top, $direction: to bottom, $size: 100% 1px) {
    background-image: linear-gradient($direction, $color 50%, transparent 50%);
    background-position: $position;
    background-repeat: no-repeat;
    background-size: $size;
}

@mixin dpr($dpr, $radius, $pseudo) {
    @media only screen and (-webkit-min-device-pixel-ratio: $dpr) {
        &::#{$pseudo} {
            width: $dpr * 100%;
            height: $dpr * 100%;
            border-radius: rem($dpr * $radius);
            transform: scale(1 / $dpr);
        }
    }
}

$dpr-list: 1, 1.5, 2, 2.5, 3, 3.5, 4;
@mixin border($position: all, $color: $divide-color, $radius: 0, $width: 1px, $z-index: 1, $style: solid, $pseudo: before) {
    position: relative;
    z-index: $z-index;
    border-radius: rem($radius);

    &::#{$pseudo} {
        position: absolute;
        top: 0;
        left: 0;
        z-index: $z-index + 1;
        pointer-events: none;
        content: ' ';
        box-sizing: border-box;
        transform-origin: left top;
        @if $position == all {
            border: $width $style $color;
        } @else if $position == top {
            border-top: $width $style $color;
        } @else if $position == right {
            border-right: $width $style $color;
        } @else if $position == bottom {
            border-bottom: $width $style $color;
        } @else if $position == left {
            border-left: $width $style $color;
        } @else if $position == topLeft {
            border-top: $width $style $color;
            border-left: $width $style $color;
        } @else if $position == topBottom {
            border-top: $width $style $color;
            border-bottom: $width $style $color;
        }
    }
    @each $dpr in $dpr-list {
        @include dpr($dpr, $radius, $pseudo);
    }
}
